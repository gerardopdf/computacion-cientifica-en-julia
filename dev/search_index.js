var documenterSearchIndex = {"docs":
[{"location":"ecosistema/graficos_pub/#Gráficos-para-publicaciones","page":"Gráficos para publicaciones","title":"Gráficos para publicaciones","text":"","category":"section"},{"location":"ecosistema/intro/","page":"Introducción","title":"Introducción","text":"# Librerías","category":"page"},{"location":"ecosistema/intro/","page":"Introducción","title":"Introducción","text":"En esta parte exploraremos ciertas librerías o ecosistemas de interés para la computación científica en Julia.","category":"page"},{"location":"#Generalidades","page":"Generalidades","title":"Generalidades","text":"","category":"section"},{"location":"#Objetivos","page":"Generalidades","title":"Objetivos","text":"","category":"section"},{"location":"","page":"Generalidades","title":"Generalidades","text":"Los objetivos principales consisten en presentar los conceptos básicos de la computación científica moderna mediante el lenguaje de programación Julia y su ecosistema de código abierto. Asimismo, se brindarán nociones y patrones de diseño que faciliten el uso de herramientas computacionales para la generación de códigos mantenibles, eficientes y reproducibles.","category":"page"},{"location":"#Forma-de-evaluación","page":"Generalidades","title":"Forma de evaluación","text":"","category":"section"},{"location":"","page":"Generalidades","title":"Generalidades","text":"La evaluación consta de un trabajo final del curso enfocado al desarrollo de un paquete de Julia para la resolución de un problema de computación científica de interés para el/la estudiante. El estudiante defenderá un anteproyecto en un plazo límite establecido al inicio del curso. Finalmente, el proyecto completo, acompañado del código fuente y la documentación correspondiente, se defenderá en una exposición oral abierta a otros estudiantes del curso con preguntas de los docentes.","category":"page"},{"location":"#Temario","page":"Generalidades","title":"Temario","text":"","category":"section"},{"location":"","page":"Generalidades","title":"Generalidades","text":"Herramientas básicas. Alcance de la computación científica. Revisión de lenguajes de alto nivel vs. lenguajes de programación de sistemas. Revisión de aritmética de punto flotante. Conceptos básicos de Julia. Entorno de desarrollo. Herramienta git para control de revisión. Conceptos de desarrollo open source. Patrones de diseño de software en la computación científica.","category":"page"},{"location":"","page":"Generalidades","title":"Generalidades","text":"Fundamentos de Julia. Tipos de datos básicos. Variables. Arreglos. Módulos. Gestor de paquetes. Estructuras de datos. Gráficos en 2D y 3D. Lectura y escritura de archivos. Tipos concretos y abstractos. Tipos paramétricos. Despacho múltiple (multiple dispatch). Diseño de funciones. Evaluación en el sitio (in-place). Evaluación perezosa (lazy). Interfaces. Macros. Metaprogramación y ejemplos de lenguajes específicos de dominio (DSL).","category":"page"},{"location":"","page":"Generalidades","title":"Generalidades","text":"Patrones de diseño. Generación de paquetes. Patrones para reutilización de código. Generación de tests. Documentación de código. Integración continua. Patrones para código de alto desempeño (performance). Análisis de desempeño (profiling). Depuración de código. Patrones de robustez. Programación genérica. Programación paralela. Anti-patrones.","category":"page"},{"location":"","page":"Generalidades","title":"Generalidades","text":"Ecosistema de Julia para computación científica. Conceptos avanzados de gráficos y generación de gráficos para publicaciones. Paquetes para trabajar con datos, como data frames, y aprendizaje estadístico. Paquetes para resolver sistemas dinámicos, e.g. ecuaciones diferenciales ordinarias y ecuaciones en derivadas parciales. Paquetes para modelado y resolución de problemas de optimización matemática. Nota: los contenidos de esta parte son indicativos y se contempla adaptarlos a los intereses de los/las estudiantes.","category":"page"},{"location":"#Bibliografía","page":"Generalidades","title":"Bibliografía","text":"","category":"section"},{"location":"","page":"Generalidades","title":"Generalidades","text":"Hands-On Design Patterns and Best Practices with Julia: Proven solutions to common problems in software design for Julia 1. x. Kwong, T.  Packt Publishing Ltd, 2020.  ISBN: 9781838648817\nFundamentals of Numerical Computation (Vol. 154). Driscoll, T. A., & Braun, R. J. SIAM 2017.  ISBN: 9781611975079\nAlgorithms for Optimization. Kochenderfer, M and Wheeler, T. A.  2019. ISBN: 9780262039420\nPro git. Chacon, S. and Straub, B. Springer Nature, 2014.  ISBN: 9781430218333\nPrinciples of scientific computing. Bindel, D. and Goodman, J. New York University, 2009.\nStatistics with Julia. Nazarathy, Yoni, and Hayden Klok. 2021. 2365-5682\nNumerical Linear Algebra with Julia. Darve E, Wootters M. SIAM; 2021. Darve E, Wootters M. ISBN: 9781611976540","category":"page"},{"location":"fundamentos/variables/#Variables","page":"Variables","title":"Variables","text":"","category":"section"}]
}
